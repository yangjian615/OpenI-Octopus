apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "rest-server.fullname" . }}
  labels:
{{ include "rest-server.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "rest-server.select-labels" . | indent 8 }}
  template:
    metadata:
      name: {{ template "rest-server.name" . }}
      labels:
{{ include "rest-server.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ template "rest-server.fullname" . }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{ toYaml . | indent 2 }}
      {{- end }}
      containers:
      - name: rest-server
        image: '{{ default .Values.global.image.repository.address .Values.image.address }}{{ default .Values.global.image.repository.pathname .Values.image.pathname }}/{{ .Values.image.name }}:{{ default .Chart.Version .Values.image.tag }}'
        imagePullPolicy: {{ default .Values.global.image.pullPolicy .Values.image.pullPolicy }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
{{- if .Values.volumes }}
  {{- range .Values.volumes }}
        - mountPath: {{ .mountPath }}
          name: {{ .name }}
  {{- end }}
{{- end }}
        env:
        - name: EGG_SERVER_ENV
          value: "prod"
        - name: NODE_ENV
          value: "production"
        - name: WORK_IN_K8S_CLUSTER
          value: "YES"
        - name: MYSQL_HOST
          value: '{{ template "rest-server-storage.host" .}}'
        - name: MYSQL_PORT
          value: "{{ .Values.storage.service.targetPort }}"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PWD
          value: "{{ .Values.storage.rootPassword }}"
        - name: DOCKER_REGISTRY_ADDR
          value: "{{ .Values.docker.registry }}"
        - name: DOCKER_USER
          value: "{{ .Values.docker.username }}"
        - name: DOCKER_PASSWORD
          value: "{{ .Values.docker.password }}"
        - name: SERVER_PORT
          value: "{{ .Values.service.targetPort }}"
        - name: JWT_SECRET
          value: "{{ .Values.common.jwtSecret }}"
        - name: IMAGE_FACTORY_URI
          value: '{{ template "image-factory-shield.address" . }}'
        - name: IMAGE_UBUNTU_GIT
          value: "{{ .Values.global.image.repository.address }}/openi/ubuntu-git2"
        - name: GIT_SERVER
          value: "{{ .Values.git.server }}"
        - name: GIT_USER
          value: "{{ .Values.git.username }}"
        - name: GIT_PASSWORD
          value: "{{ .Values.git.password }}"
        - name: GIT_REGISTRY
          value: "{{ .Values.git.registry }}"
        - name: ENABLED_API_DOC
          value: "{{ .Values.common.enabledApiDoc }}"
        - name: TASKSET_CORE_HOST
          value: '{{ template "taskset-core.address" . }}'
        - name: TASKSET_CORE_ACCESS_TOKEN
          value: "{{ .Values.tasksetCore.accessToken }}"
        - name: SCHEDULER_TYPE
          value: "{{ .Values.global.scheduler.type }}"
        - name: ALLOWS_CORS_DOMAINS
          value: "{{ .Values.common.allowCorsDomains }}"
{{- if .Values.envs }}
    {{- range .Values.envs }}
        - name: "{{ .name }}"
          value: "{{ default .defaultValue .value }}"
    {{- end }}
{{- end }}
        ports:
        - name: {{ template "rest-server.name" . }}
          containerPort: {{ .Values.service.targetPort }}
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
{{- if .Values.volumes }}
  {{- range .Values.volumes }}
      - name: {{ .name }}
        hostPath:
          path: {{ .hostPath }}
  {{- end }}
{{- end }}