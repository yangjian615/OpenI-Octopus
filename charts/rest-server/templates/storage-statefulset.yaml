apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "rest-server-storage.fullname" . }}
  labels:
{{ include "rest-server-storage.labels" . | indent 4 }}
spec:
  serviceName: {{ template "rest-server-storage.fullname" . }}
  replicas: {{ .Values.storage.replicaCount }}
  selector:
    matchLabels:
{{ include "rest-server-storage.select-labels" . | indent 8 }}
  template:
    metadata:
      labels:
{{ include "rest-server-storage.labels" . | indent 8 }}
    spec:
{{- with .Values.storage.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      nodeSelector:
{{- with .Values.global.nodeSelector }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.storage.nodeSelector }}
{{ toYaml . | indent 8 }}
{{- end }}
      containers:
      - name: mysql-db
        image: '{{ default .Values.global.image.repository.address .Values.storage.image.address }}{{ default .Values.global.image.repository.pathname .Values.storage.image.pathname }}/{{ .Values.storage.image.name }}:{{ default .Chart.Version .Values.storage.image.tag }}'
        imagePullPolicy: {{ default .Values.global.image.pullPolicy .Values.storage.image.pullPolicy }}
{{- with .Values.storage.args }}
        args:
{{ toYaml . | indent 8 }}
{{- end }}
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-storage
        env:
        - name: TZ
          value: Asia/Shanghai
        - name: MYSQL_ROOT_PASSWORD
          value: "{{ .Values.storage.rootPassword }}"
        ports:
        - name: mysql-db
          containerPort: {{ .Values.storage.service.targetPort }}
          hostPort: {{ .Values.storage.service.port }}
      volumes:
      - name: mysql-storage
{{- if .Values.storage.dataVolume.hostPath }}
        hostPath:
          path: {{ .Values.storage.dataVolume.hostPath }}
{{- else }}
        emptyDir: {}
{{- end }}